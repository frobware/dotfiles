#!/usr/bin/env bash

# Commands that should be applied only for interactive shells.
[[ $- == *i* ]] || return

# pathmunge: copied from /etc/profile
pathmunge () {
    case ":${PATH}:" in
        *:"$1":*)
        ;;
        *)
            if [ "$2" == "after" ]; then
                PATH=$PATH:$1
            else
                PATH=$1:$PATH
            fi
    esac
}

[[ -f /etc/bashrc ]] && source /etc/bashrc

HISTFILESIZE=2000
HISTSIZE=1000

shopt -s checkwinsize
shopt -s histappend
shopt -s histreedit
shopt -s hostcomplete

export PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND$"\n"}history -a; history -c; history -r"
#HISTTIMEFORMAT='%F %T '

# Set no limit for history file size
HISTFILESIZE=-1		# no limits

# Set no limit for history file size
HISTSIZE=-1

# Do not store a duplicate of the last entered command
HISTCONTROL=ignoredups

function cover() {
    local t="/tmp/go-cover.$$.tmp"
    go test -coverprofile=$t "$@" && go tool cover -html=$t && unlink $t
}

if [ "$TERM" != "dumb" ]; then
    [[ -f /usr/share/fzf/shell/key-bindings.bash ]] && source  /usr/share/fzf/shell/key-bindings.bash
fi

unset PROMPT_COMMAND

vterm_printf() {
    if [ -n "$TMUX" ] && ( [ "${TERM%%-*}" = "tmux" ] || [ "${TERM%%-*}" = "screen" ] ); then
        printf "\ePtmux;\e\e]%s\007\e\\" "$1";
    else
        if [ "${TERM%%-*}" = "screen" ]; then
            printf "\eP\e]%s\007\e\\" "$1";
        else
            printf "\e]%s\e\\" "$1";
        fi;
    fi
}

if [[ "$INSIDE_EMACS" =~ 'vterm' ]]; then
    function clear () {
        vterm_printf "51;Evterm-clear-scrollback";
        tput clear
    }
fi

random_macaddr() {
    # https://serverfault.com/questions/299556/how-to-generate-a-random-mac-address-from-the-linux-command-line
    openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/:$//'
}

if which direnv >/dev/null 2>&1; then
    eval "$(direnv hook bash)"
fi

# usage: dedupe_path <COLON-SEPARATED-PATH>
# Examples:
#   export PATH=$(dedupe_path "$PATH")
#   export LD_LIBRARY_PATH=$(dedupe_path "$LD_LIBRARY_PATH")
#   export MANPATH=$(dedupe_path "$MANPATH")
function dedupe_path() {
    declare -A seen
    local deduped=
    local IFS=:
    for x in $1; do
        # -v was added to bash-4.2 but support for checking array
        # indexes was only added to bash-4.3.
        if [[ -n $x && ! -v seen[$x] ]]; then
            deduped=${deduped:+$deduped:}$x
            seen[$x]=1
        fi
    done
    echo "$deduped"
}

function_exists() {
    declare -F "$1" > /dev/null;
}

export -f function_exists

if ! function_exists __oc_get_namespaces; then
    if type -P oc >/dev/null 2>&1; then
        eval "$(oc completion bash)"
    fi
fi

export PATH=$(dedupe_path "$PATH")
export GPG_TTY=$(tty)

[[ -f ~/.bash_aliases ]]  && . ~/.bash_aliases

unset LS_COLORS
